const User = require('../models/User');
const bcrypt = require('bcryptjs');


exports.signup = async (req, res) => {
    const { username, email, password } = req.body;
    const hashedPassword = await bcrypt.hash(password, 10);
    try {
       
       
        const newUser = new User({ username, email, hashedPassword });
        await newUser.save();
        res.status(201).json({ message: 'User created successfully', user_id: newUser._id });   
    } catch (error) {
        console.log(error);
        res.status(500).json({ message: 'Internal server error' });
    }
};

exports.login = async (req, res) => {
    const { email, password } = req.body;
    try {
        const user = await User.findOne({ email });
        if (!user || !(await bcrypt.compare(password, user.password))) {
            return res.status(400).json({ message: 'Invalid credentials' });
        }
        const token = jwt.sign({ email: user.email, id: user.id}, process.env.JWT_SECRET);
        res.status(200).json({ result: user, token });
    } catch (error) {
        res.status(500).json({ status: false, message: 'Internal server error' });
    }
};
